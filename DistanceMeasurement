//SHUBHAJIT RANA : DISTANCE MEASUREMENT PROJECT

#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels

// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, -1);
//SLC should be connected to A5 of Arduino
//SDA should be connected to A4 of Arduino
const int buzzerPin = 8; //Buzzer pin (passive Buzzer)

// Define the pins for the ultrasonic sensor
const int trigPin = 9;  // Trigger pin
const int echoPin = 10; // Echo pin

void setup() {
  // tone(buzzerPin,500,100);
  Serial.begin(9600);
  pinMode(trigPin, OUTPUT);
  pinMode(echoPin, INPUT);

  pinMode(buzzerPin, OUTPUT);

  Serial.begin(115200);
  if (!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) { // Address 0x3D for 128x64
    Serial.println(F("SSD1306 allocation failed"));
    for (;;);
  }
  delay(2000);
  display.clearDisplay();

  display.setTextSize(1);
  display.setTextColor(WHITE);
  display.setCursor(5, 0);
  display.println("Distance Measurement");
  display.setCursor(30, 20);
  display.println("Project By: ");
  display.setCursor(15, 40);
  display.println("SHUBHAJIT RANA");
  display.display();
  delay(3000);
}

void loop() {
  digitalWrite(trigPin, LOW);
  delayMicroseconds(20);
  digitalWrite(trigPin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trigPin, LOW);

  // Measure the duration of the echo pulse
  long duration = pulseIn(echoPin, HIGH);

  // Calculate the distance (speed of sound in air is approximately 343 meters per second)
  float distance_cm = duration * 0.034 / 2;

  Serial.print("Distance: ");
  Serial.print(int(distance_cm));
  Serial.println(" cm");

  // Clear the previous distance value
  display.fillRect(0, 10, SCREEN_WIDTH, 10, BLACK); // Clear only the area where distance is displayed

  // Set cursor and print new distance value
  display.clearDisplay();
  display.setTextSize(2);
  display.setTextColor(WHITE);
  display.setCursor(0, 0);
  display.println("DISTANCE = ");
  display.print(int(distance_cm));
  display.print(" CM");
  display.display();

  if(distance_cm < 20){
    tone(buzzerPin,700,200);
    delay(200);
    tone(buzzerPin,650,200);
  }

  delay(1000); // Adjust the delay as needed
}
